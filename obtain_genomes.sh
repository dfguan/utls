#!/bin/bash
# Author: dfguan9
# Date: 2020-08-14
# Function: obtain genome assemblies from a given list, usually generated by get_assembly_summary.sh


USAGE="
`basename $0` [<OPTIONS>] <ARGUMENT>

ARGUMENT
 <input>                The list of assembly information delimited by tab         
 
OPTIONS
 -h <has_header>        Has a header, 1 for yes, 0 for no                  [default: 1]
 -a <accession_ID>      The field number of accession id                   [default: 1] 
 -s <species_name>      The field number of species name                   [default: 5]
 -g <asmsum.txt>        Directory of assembly_summary_{genbank,refseq}.txt [default: .] 
 -v                     Verbose mode
"

sfn=1
afn=5
asmdir="."
header=1

while getopts "a:s:g:r:h" OPT "$@"; do
    case $OPT in
        a) sfn="$OPTARG"
			;;
		s) afn="$OPTARG"
			;;
        g) asmdir="$OPTARG"
			;;
        h) header=0
			;;
        \?) echo "Invalid option: -$OPTARG" >&2 
            exit 1 
			;;
        :) echo "Option -$OPTARG requires an argument." >&2
           exit 1
        ;;
    esac
done

shift $((OPTIND-1))
[[ $# -eq 1 ]] || { printf "$USAGE" >&2 && exit 1; }
if [ $# -lt 1 ]
then
	echo "Require an assembly summary as input"
	exit 1
fi

asmfl=$1

if [ ! -f $gfdir/"assembly_summary_genbank.txt" ]
then
	echo "assembly_summary_genbank.txt is not found under "$gfdir", now downloading......" 
	wget -N -P  $gfdir https://ftp.ncbi.nlm.nih.gov/genomes/genbank/assembly_summary_genbank.txt 
	if [ $? -ne 0 ]
	then
		echo "Can not retrieve genbank summary, please check your network connection" 		
		exit 1
	fi
fi
if [ ! -f $rfdir/"assembly_summary_refseq.txt" ]
then
	echo "assembly_summary_genbank.txt is not found under "$rfdir", now downloading......" 
	wget -N -P $gfdir https://ftp.ncbi.nlm.nih.gov/genomes/refseq/assembly_summary_refseq.txt
	if [ $? -ne 0 ]
	then
		echo "Can not retrieve refseq summary, please check your network connection" 		
		exit 1
	fi
fi

if [ $header -eq 1 ]
then
	cut -f$sfn,$afn -d$'\t'  $asmfl | head -n -1 | sed 's/ /_/g' > tmp_list
else
	cut -f$sfn,$afn -d$'\t'  $asmfl | sed 's/ /_/g' > tmp_list
fi
while read -r ga dirn 
do 
	gaftppath=`grep -w ^$ga "$asmdir"/assembly_summary_refseq.txt | cut -d$'\t' -f20`	
	[ -z "$gaftppath" ] && gaftppath=`grep -w ^$ga "$asmdir"/assembly_summary_genbank.txt | cut -d$'\t' -f20`	
	if [ -z "$gaftppath" ]
	then
		echo "Warning: we can not find accession $ga"		
	else
		mkdir -p $dirn
		subdir=`basename $gaftppath`
		echo Now start downloading $gaftppath
		wget -c -o $dirn/"$dirn".wget.log   -O $dirn/"$dirn"."$ga".fna.gz "$gaftppath"/"$subdir"_genomic.fna.gz 
		wget -c -o $dirn/"$dirn".wget.log   -O $dirn/"$dirn"."$ga".gtf.gz "$gaftppath"/"$subdir"_genomic.gtf.gz 
		[ -s $dirn/"$dirn"."$ga".gtf.gz ] || rm -f $dirn/"$dirn"/"$ga".gtf.gz 
		wget -c -o $dirn/"$dirn".wget.log   -O $dirn/"$dirn"."$ga".gff.gz "$gaftppath"/"$subdir"_genomic.gff.gz 
		[ -s $dirn/"$dirn"."$ga".gff.gz ] || rm -f $dirn/"$dirn"/"$ga".gff.gz 
	fi		
done < tmp_list


